@{
    ViewData["Title"] = "Home Page";
}

<div class="repl-main-ide" id="repl-main-ide"
     style="grid-template-columns: 1fr 10px 2fr; grid-template-rows: 3fr 10px 1fr 0px 30px;">
    <pre class="repl-main-ide-console" id="console"
         v-on:click="consoleFocus()"
         v-html="consoleText"></pre>
    <div class="repl-main-ide-splitter-h gridsplitter-control-h"></div>
    <div class="repl-main-ide-source">
        <div class="repl-main-ide-toolbar">
            <button class="btn btn-info" v-on:click="buildSource" v-bind:disabled="isRunning || isBuilding === true"><img src="~/images/build.png" />Build</button>
            <button class="btn btn-success" v-on:click="buildAndRunSource" v-bind:disabled="isRunning || isBuilding === true"><img src="~/images/play.png" />Run</button>
            <button class="btn btn-danger" v-on:click="stopAll" v-bind:disabled="!(isRunning || isBuilding === true)"><img src="~/images/stop.png" />Stop</button>
        </div>
        <iframe src="~/Home/CodeView" onload="iframeLoaded()"></iframe>
    </div>
    <div class="repl-main-ide-splitter-v-err gridsplitter-control-v"></div>
    <div class="repl-main-ide-errors">
        <table>
            <thead>
                <tr>
                    <th></th>
                    <th>Id</th>
                    <th>Location</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tr v-cloak v-for="err in builderrors">
                <td><img v-bind:src="'/images/' + err.severity + '.png'" /></td>
                <td>{{ err.id }}</td>
                <td>{{ (err.startPosition) ? 'ln' + err.startPosition.line + ', ch' + err.startPosition.character : '' }}</td>
                <td>{{ err.description }}</td>
            </tr>
        </table>
    </div>
    <div></div><!-- empty gutter -->
    <div class="repl-main-ide-status" v-cloak
         v-bind:class="{
         'status-error': statusCode === 'error',
         'status-success': statusCode === 'success',
         'status-busy': statusCode === 'busy',
         'status-default': statusCode === ''
         }">
        <div class="repl-main-ide-status-progressbar progress" v-if="isBuilding === true"><div class="indeterminate"></div></div>
        <div class="repl-main-ide-status-label" v-cloak>{{ statusText }}</div>
    </div>
</div>

@section head{
    <link href="https://fonts.googleapis.com/css?family=Roboto+Mono" rel="stylesheet">
    <script src="~/js/split-grid.min.js"></script>
    <script src="~/js/signalr.min.js"></script>
}
<environment include="Development">
    <script src="~/js/vue.js"></script>
    <script src="~/js/repl.js"></script>
</environment>
<environment exclude="Development">
    <script src="~/js/vue.js"></script>
    <script src="~/js/repl.js"></script>
</environment>

<script>
    let cEditor = null;
    function iframeLoaded() {
        console.log("Iframe loaded");
        cEditor = document.querySelector(".repl-main-ide-source iframe")
            .contentWindow.cEditor;
    }

    document.addEventListener("DOMContentLoaded", function () {
        const split = Split({ // gutters specified in options
            columnGutters: [{
                track: 1,
                element: document.querySelector(".repl-main-ide-splitter-h"),
            }],
            rowGutters: [{
                track: 1,
                element: document.querySelector(".repl-main-ide-splitter-v-err"),
            }],
            columnMinSizes: {
                0: 100,
                2: 30
            },
            rowMinSizes: {
                0: 100,
                2: 45
            }
        });

        //const toolbarButtons = document.querySelectorAll(".repl-main-ide-toolbar button")
        //const toolbarButtons = document.querySelectorAll(".repl-main-ide-toolbar button")

        //const replSvc = replService.init(
        //    document.querySelector(".repl-main-ide-console"),
        //    document.querySelector(".repl-main-ide-console"),
        //    document.querySelector(".repl-main-ide-errors"),
        //    document.querySelector(".repl-main-ide-status"),
        //    toolbarButtons[0],
        //    toolbarButtons[1],
        //    toolbarButtons[2]
        //);
    });
</script>